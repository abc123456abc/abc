aa

  	------------------2nd Level Caching In Hibernate with Spring-----------------

1) In DAO
	
	1) In Resource
		---Core-Hibernate.xml
		---database.properties
		---ehcache.xml

	2) In Entities
		ERPMaster 
	3) In DAO 
		IMasterDAO 
		MasetrDAOImpl 
	

2) In Service
		
	1) In Service	
		1) In Resource
			application1.xml
		2) In Service
			IMasterService 
			MasterServiceImpl 
			
		

3) In UI
	1) In UI
		1) Controller
			MasterController 
		2) WEB-INF 
			mvc-dispatcher-servlet
			web.xml
			index.jsp
			pages (Folder)
				master.jsp
			
			

----------------------------------------------------------Code----------------------

	-----------------------1) Core-Hibernate.xml

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!-- Enable annotation style of managing transactions -->
	 
	 
	 
    <context:component-scan base-package="com.cnk.hibernatecache" />
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
        <property name="location" value="classpath:database.properties" />            
    </bean>
    
    <!--<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>-->
    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url.kk}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
  <!--  <bean id="auditLogUtil" class="com.erp.util.AuditLogUtil.AuditLogUtil"></bean>
   
   <bean id="entityInterceptor" class="com.erp.interceptor.AuditLogInterceptor">
    <property name="sessionFactory" ref="sessionFactory"></property>
    </bean> -->
   
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <!--  <property name="entityInterceptor">
            <ref bean="entityInterceptor"/>
        </property> -->
        
        <!-- <property name="entityInterceptor">
            <bean class="com.erp.interceptor.AuditLogInterceptor"/>
        </property>   -->      
        <!--<property name="lobHandler" ref="defaultLobHandler"/>-->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                
                 <prop key="hibernate.cache.use_query_cache">true</prop> 
                 <prop key="hibernate.cache.provider_class">net.sf.Ehcache.hibernate.SingletonEhcacheProvider</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.EhCacheRegionFactory</prop>
                <prop key="net.sf.Ehcache.configurationResourceName">ehcache.xml</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				 <prop key="hibernate.generate_statistics">true</prop>
                
                 
            </props>
        </property>
        <property name="mappingResources">
              <list>
                
            </list>
        </property>
        
        <property name="annotatedClasses">
            <list>
            	<!-- masters -->
        		<!-- <value>com.cnk.travelerpibe.entities.City</value>    -->     
        		<value>com.cnk.hibernatecache.entities.ERPMaster</value>
        		
        										
            </list>
        </property>
    </bean>
     
   
     
     
     
    <!-- <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager" 
            p:sessionFactory-ref="sessionFactory" /> -->
            
     <bean id = "transactionManager" class = "org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name = "sessionFactory" ref = "sessionFactory" />
</bean>
     <tx:annotation-driven transaction-manager="transactionManager"/>       

    
</beans>

==============================================END=========================

2)  ---------------------------database.properties

	jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url.kk=jdbc:mysql://localhost:3306/test
jdbc.username=root
jdbc.password=
	
===================================================END=========================

3) ------------------------------ehcache.xml

	
	<?xml version='1.0' encoding='UTF-8'?>
<ehcache xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='http://ehcache.org/ehcache.xsd'>
<diskStore path="d:/hibernate3"/>
<defaultCache
maxElementsInMemory="150"
eternal="true"
timeToIdleSeconds="3000"
timeToLiveSeconds="3000"
overflowToDisk="true"
memoryStoreEvictionPolicy="LRU" />
<cache name="com.cnk.hibernatecache.entities.ERPMaster"
maxElementsInMemory="15"
eternal="true"
timeToIdleSeconds="150"
timeToLiveSeconds="150"
overflowToDisk="true"/>
<cache name="com.cnk.hibernatecache.daoimpl.MasetrDAOImpl.findAll"
maxElementsInMemory="15"
eternal="true"
timeToIdleSeconds="150"
timeToLiveSeconds="150"
overflowToDisk="true" />
</ehcache>

================================END==================================

4)      ----------------------ERPMaster



import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

@Entity
@Table(name="ERPMASTER")
@Cache(usage=CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class ERPMaster {

	@Id
	@GeneratedValue
	@Column(name="KEYID")
	private int keyId;
	
	@Column(name="CODE")
	private String code;
	
	@Column(name="MCATEGORY")
	private String mcategory;
	
	@Column(name="DESCRIPTION")
	private String description;

	put setter & Getter
	
}
==================================END===========================

4) --------------------------IMasterDAO 
import java.util.List;

import com.cnk.hibernatecache.entities.ERPMaster;



public interface IMasterDAO {

	public void save(ERPMaster entity);
	public void update(ERPMaster entity);
	public List<ERPMaster> findAll();
}

=====================================END======================

4) -----------------------------


import java.util.List;

import org.hibernate.Query;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.cnk.hibernatecache.dao.IMasterDAO;
import com.cnk.hibernatecache.entities.ERPMaster;




@Repository
public class MasetrDAOImpl implements IMasterDAO {

	@Autowired
	private SessionFactory sessionFactory;
	
	
	public void setSessionFactory(SessionFactory sessionFactory) {
		this.sessionFactory = sessionFactory;
	}

	public void save(ERPMaster entity) {
	System.out.println("DAO");
		sessionFactory.getCurrentSession().save(entity);

	}
	
	public void update(ERPMaster entity)
	{
		sessionFactory.getCurrentSession().update(entity);
	}
	
	@SuppressWarnings("unchecked")
	public List<ERPMaster> findAll()
	{
		System.out.println("DAO IMPL");
		return sessionFactory.getCurrentSession().createQuery("from ERPMaster").setCacheable(true).list();
	}
	
	public void disp()
	{
		Query qu=sessionFactory.getCurrentSession().createSQLQuery("from ERPMaster");
		
	}

}
==================================================End========================
5) ----------------------------application1.xml

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">
    
    	<context:component-scan base-package="com.cnk.hibernatecache" />
     <import resource="classpath:core-hibernate.xml"/>
    
  
    
    </beans>

==============================================END=========================

6) ---------------------------IMasterService 

import java.util.List;

import com.cnk.hibernatecache.entities.ERPMaster;



public interface IMasterService {

	public void saverMaster(ERPMaster entity);
	public void updateMaster(ERPMaster entity);
	public List<ERPMaster> findAllMaster();
}


=================================END======================================

6) --------------------------MasterServiceImpl 

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.cnk.hibernatecache.dao.IMasterDAO;
import com.cnk.hibernatecache.entities.ERPMaster;
import com.cnk.hibernatecache.service.IMasterService;




@Service
public class MasterServiceImpl implements IMasterService {

	@Autowired
	private IMasterDAO masterDAO;
	
	public void setMasterDAO(IMasterDAO masterDAO) {
		this.masterDAO = masterDAO;
	}

	@Transactional
	public void saverMaster(ERPMaster entity) {
	
		masterDAO.save(entity);
	}
	
	@Transactional
	public void updateMaster(ERPMaster entity)
	{
		masterDAO.update(entity);
	}
	
	@Transactional
	public List<ERPMaster> findAllMaster()
	{
		return masterDAO.findAll();
	}

}


===========================================END============================

7) ---------------------------MasterController 


import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cnk.hibernatecache.entities.ERPMaster;
import com.cnk.hibernatecache.service.IMasterService;




@Controller
public class MasterController {

	
	@Autowired
	private IMasterService masterService;
	
	
	
	
	@RequestMapping(value="/master", method = RequestMethod.GET)
	protected String  printWelcome(HttpServletRequest request,ModelMap model,
			HttpServletResponse response)
			throws Exception {
	System.out.println("Controller");
		return "master";
	}
	@RequestMapping(value="/save",method=RequestMethod.GET)
	public String saveErp1(ModelMap model)
	{
		System.out.println("Save.. In Mster Controller");
		
		ERPMaster ee=new ERPMaster();
		ee.setMcategory("Account");
		ee.setCode("ACC");
		ee.setDescription("Accounting");
		
		masterService.saverMaster(ee);
		
	
		
		return "master";
	}
	
	
	@RequestMapping(value="/displayAll",method=RequestMethod.GET)
	public String displayAll1()
	{
		
		/*List<ERPMaster> list=masterService.findAllMaster();
		System.out.println("Total List Size "+list.size());
		return "master";
		*/
		
		// for 
		
		return "master";
		
	}
	
	@RequestMapping(value = "/get_customer_list", method = RequestMethod.POST)
	public @ResponseBody
	List<String> getCustomerList(@RequestParam("username") String query) throws Exception {
		
		System.out.println("autocomplite box for customer username=" + query);
		
		List<String> customerList= new ArrayList<String>();
		
       		
		String res =  "{UserDetails: [{name:c, cityid:1}," +
        "{name:java, cityid:2}," +
        "{name:php, cityid:3}," +
        "{name:coldfusion, cityid:4}," +
        "{name:javascript, cityid:5}," +    
        "{name:asp, cityid:6}," +
        "{name:ruby, cityid:7}]}"; 

		
		
		JSONObject userDet = new JSONObject(res);
		JSONArray userDetJson = userDet.getJSONArray("UserDetails");
		
		customerList.add(userDetJson.toString());
		
	
		
		System.out.println("Json Arrya Object "+userDetJson);
		System.out.println("Ajax ...."+customerList);

		return customerList;
	}
	
	
}


====================================END===========================================

8) -------------------------------mvc-dispatcher-servlet
	
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      	 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      	 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">


	<context:annotation-config />
	<context:component-scan base-package="com.cnk.hibernatecache" />
	<mvc:annotation-driven />

	<mvc:resources mapping="/resources/**" location="/resources/" />


<mvc:interceptors>

    <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
        <property name="cacheSeconds" value="0"/>
        <property name="useExpiresHeader" value="true"/>
        <property name="useCacheControlHeader" value="true"/>
        <property name="useCacheControlNoStore" value="true"/>
    
        <property name="cacheMappings">
    <props>
        <prop key="/logout">0</prop>
    </props>
</property>
    </bean>
 
</mvc:interceptors>

<!-- 
<script type="text/javascript"
			src="./resources/js/jquery.form.wizard.js"></script> -->

<import resource="classpath:application1.xml"/>


	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	

</beans>
====================================================================END================================
9) -----------------web.xml

<web-app id="WebApp_ID" version="2.4"
	xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>ERPproduct</display-name>

	<!-- Spring MVC -->
	<servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/mvc-dispatcher-servlet.xml,
			
		 </param-value>
	</context-param>
<welcome-file-list>
	<welcome-file>index.jsp</welcome-file>
</welcome-file-list>
================================================================END===========================

10) -----------------------master.jsp
	<%@taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<html>
<head>
<title>autocomplete demo</title>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css">
<script src="http://code.jquery.com/jquery-1.9.1.js"></script>
<script src="http://code.jquery.com/ui/1.10.2/jquery-ui.js"></script>
</head>
<body onLoad="$.init();">
<form>
<label for="autocomplete">Select a programming language: </label>
<input id="autocomplete">
<input type="hidden" id="jsonData">
<input type="hidden" id="tagsData">

<div id="result" style="display: none;">eeee</div> 
</form>
</body>
<script type="text/javascript">

$(document).ready(function() {

	var tags1;
	
	
	$.collectListValue=function(){
		/* var 	cityId = JSON.parse($("#jsonData").val());	
		$.each(cityId, function(k, v) {
		    //display the key and value pair
		  //  alert(k + ' is ' + v.name+"  "+v.index);
		
			tags1+=v.name+",";
		    
		}); */
		
		alert("Tags1 Value "+$('#tagsData').val());
		
	};
	
	$.display = function (){
		var 	cityId = JSON.parse($("#jsonData").val());	
		//alert(cityId[0].name);
        for (var i in cityId){
                           if(cityId[i].name == document.getElementById("autocomplete").value){
                                            alert(cityId[i].name + "'s" + " Id is  = " +  cityId[i].cityid);
                                            return;
                            }
            }
	};


	$.callData = function(){
		var tt="";
		$.ajax({
	        type: "POST",
	        url: '<c:url value="/get_customer_list?username=abc" />' ,
	      
	        success: function(response){
	        	var ob=JSON.parse(response);
	        	$("#jsonData").val(response);
	        	$("#result").html(response);
	        	
	        	var tags1="[";
	        	$.each(ob, function(k, v) {
    		
	    			tags1 += "'" + v.name + "',";
	    		    
	    		});
	        	
	        	$("#tagsData").val(tags1.substring(0, tags1.length -1) + "]");
	        	
	        },
	        
	        error: function(e){
	        alert('Error: ');
	        }
	        });
		
	};
	
	


$( "#autocomplete" ).autocomplete({
	source: function( request, response ) {

	var matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( request.term ), "i" );
		response( $.grep( tags, function( item ){
			return matcher.test( item );
		}) );
	}
});

$.callData();

var tags; 

$.init = function(){
	tags =  eval($("#tagsData").val()); //[ "c", "java", "php", "coldfusion", "javascript", "asp", "ruby" ];
	alert(tags);
};
});

function pp(){
	alert("Hello pp");
}
</script>
<input type="button" value="Pnakaj Sir Click Me" onClick="alert($('#result').html());" />
<input type="button" value="Pnakaj Sir Click Me" onClick="alert($('#jsonData').val());" />
<input type="button" value="Pnakaj Sir Click Me" onClick="$.display();" />

<input type="button" value="Tags Value" onClick="$.collectListValue();" />
</html>
=================================================END==================================

11) index
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
rtytryr

<jsp:forward page="master"></jsp:forward>
</body>
</html>
=========================================END==================================
